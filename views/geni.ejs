<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Text to Image Generator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f1f1f1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            justify-self: center;
            max-height: 3000px;
           
            height: 100vh;
            margin: 20px;
        }
        .container {
            background-color: #fff;
            padding: 40px;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 1200px;
            text-align: center;
        }
        h1 {
            color: #333;
            font-size: 36px;
            margin-bottom: 20px;
        }
        p {
            font-size: 18px;
            color: #555;
            margin-bottom: 20px;
        }
        input {
            padding: 12px;
            font-size: 18px;
            width: 80%;
            max-width: 500px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-top: 10px;
        }
        button {
            padding: 12px 20px;
            font-size: 18px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #0056b3;
        }
        #result {
            margin-top: 20px;
            padding: 10px;
            background-color: #f8f8f8;
            border-radius: 5px;
            font-size: 18px;
            color: #777;
        }
        #imageResult {
            margin-top: 20px;
            display: none;
            text-align: center;
        }
        img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        #downloadBtn {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            display: none;
            transition: background-color 0.3s ease;
        }
        #downloadBtn:hover {
            background-color: #218838;
        }

        
#adds{
  display: flex;
  max-width: 1200px;
  margin-top: 20%;
  

}
    </style>
</head>
<body>

    <div class="container">
        <h1>Text to Image Generator</h1>
        <p>Type a description of the image you want to create:</p>
        
        <input type="text" id="userInput" placeholder="Enter your text here" size="50">
        <button onclick="generateImage()">Generate Image</button>

        <div id="result"></div>
        <div id="imageResult">
            <h3>Generated Image:</h3>
            <img id="generatedImage" src="" alt="Generated Image">
            <br>
            <button id="downloadBtn" onclick="downloadImage()">Download Image</button>
        </div>
    </div>

    <script>
        const API_KEY = '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'; 
        const API_URL = "https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev";

        async function query(data) {
            const response = await fetch(API_URL, {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${API_KEY}`,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            });
            const result = await response.blob();
            return result;
        }

        async function generateImage() {
            const userInput = document.getElementById('userInput').value;
            if (!userInput.trim()) {
                document.getElementById('result').innerText = 'Please enter some text!';
                return;
            }

            document.getElementById('result').innerText = 'Generating image...  this process may take some time  more or less 2 minutes .......';

            try {
                const imageBlob = await query({ "inputs": userInput });

                const imageUrl = URL.createObjectURL(imageBlob);
                const imageElement = document.getElementById('generatedImage');
                imageElement.src = imageUrl;

                document.getElementById('imageResult').style.display = 'block';
                document.getElementById('downloadBtn').style.display = 'inline-block';
                document.getElementById('result').innerText = 'Image Generated:';
            } catch (error) {
                console.error('Error generating image:', error);
                document.getElementById('result').innerText = 'Error generating image.';
            }
        }

        function downloadImage() {
            const imageElement = document.getElementById('generatedImage');
            const imageUrl = imageElement.src;

            const link = document.createElement('a');
            link.href = imageUrl;
            link.download = 'generated-image.png';

            link.click();
            //https://www.profitablecpmrate.com/s61i1wnk?key=f3f0d7e95be01c2945efa8db712a8c37
        }
    </script>






</body>
</html>
